module IntToString with

fun mod (m: Int) (n: Int): Int =
    m - n * (m / n)

fun intToString (n: Int): String =
    if n < 0 then concat "-" (intToString (-n))
    else match n with
        | 0 => "0"
        | 1 => "1"
        | 2 => "2"
        | 3 => "3"
        | 4 => "4"
        | 5 => "5"
        | 6 => "6"
        | 7 => "7"
        | 8 => "8"
        | 9 => "9"
        | n => concat (intToString (n / 10)) (intToString (mod n 10)) 
        end

/* Calculate how many digits there are in an integer */
fun digits (n: Int): Int =
    let fun loop (n: Int) (acc: Int): Int =
        if n < 10 then acc
        else loop (acc / 10) (acc + 1)
    in loop (abs n) 1

