module NestedComments with

/*
/* Calculates n! using the recurrence:
 * 0! = 1
 * n! = (n - 1)! * n!
 */
fun factorial (n: Int): Int =
    if n <= 1 then 1 /* Note: Handles negatives as well */
    else recFactorial(n - 1) * n
*/

/* Better factorial function */
fun factorial (n: Int): Int =
    /* At this point I'm just putting comments everywhere to make 
        sure it /* works */ properly */
    let fun loop (n: Int) (acc: Int): Int =
            if n <= /* suddenly, comment */ 1 then acc
            else loop (n - 1) (acc /* *= n */ * n)
    in loop n 1

fun main () = 
    let 
        val end: Int = 15 
        fun loop (i: Int): Unit =
            if i > 15 then () else
            let val () = println "==<>=="
                val () = println i
                val () = println (recFactorial i)
                val () = println (iterFactorial i)
                val () = println "==<>=="
            in loop (i + 1)
    in loop 0

/* And now, we're done */